<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- DB 접속 정보를 가지고 있는 문서 읽어들이기 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:test/mybatis/db.properties</value> <!-- 읽어서 -->
		</property>
	</bean>
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${driver}"/> <!-- 여기다 넣어줌(라이딩) -->
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
	</bean>
	
	<!-- SqlSessionFactory 객체 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation"
			value="classpath:test/mybatis/Configuration.xml"/>
	</bean>
	
	<!-- Dao 에 주입해줄 SqlSession 인터페이스를 구현한 
	SqlSessionTemplate 객체 -->            <!-- 디펜던시 인젝션 이라고함 DI (의존객체를 주입해줌) -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sessionFactory"/>
	</bean>




	<context:component-scan base-package="test.controller"/>
	<context:component-scan base-package="test.member.controller"/>
	<context:component-scan base-package="test.member.service"/>
	<context:component-scan base-package="test.member.dao"/>
	
	

	<!-- View Page 설정 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 부분프로그래밍을 하는것을 framework라고한다. -->
		<property name="prefix" value="/WEB-INF/views/"/> <!-- 앞에 이걸붙이겠다  : setPrefix() 라는 메소드-->
		<property name="suffix" value=".jsp"/> <!-- 뒤에 이걸붙이겠다 : setSuffix()  -->
		<!--  spring은 객체를 싱글톤으로 관리하는 컨테이너를 가지고있다. -->
	</bean>
</beans>
